{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","message","useState","position","setPosition","isServe","setIsServe","includes","boxesInfos","index","color","boxes","Array","fill","map","elem","Col","xs","className","style","height","backgroundColor","onClick","Math","floor","random","handleClick","icon","faTableTennis","fontSize","Container","Row","Button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRA6GeA,MAvGf,WACE,IA2BIC,EA3BJ,EAAgCC,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KA2BI,CAAC,EAAG,EAAG,EAAG,GAAGC,SAASJ,KACxBF,EAAU,eAGZ,IAAMO,EAAa,CACjB,CACEC,MAAO,EACPC,MAAO,SAET,CACED,MAAO,EACPC,MAAO,SAET,CACED,MAAO,EACPC,MAAO,SAET,CACED,MAAO,EACPC,MAAO,SAET,CACED,MAAO,EACPC,MAAO,SAET,CACED,MAAO,EACPC,MAAO,SAET,CACED,MAAO,EACPC,MAAO,SAET,CACED,MAAO,EACPC,MAAO,UAIPC,EAAQC,MAAM,GACfC,KAAK,GACLC,KAAI,SAACC,EAAMN,GAAP,OACH,cAACO,EAAA,EAAD,CAAKC,GAAG,IAAIC,UAAU,MAAtB,SACE,qBACEC,MAAO,CAAEC,OAAQ,QAASC,gBAAiBb,EAAWC,GAAOC,OAC7DQ,UAAU,mDACVI,QAAS,kBAvEG,SAACb,GACfJ,GACY,IAAVI,GAAyB,IAAVA,EACjBL,EAAYmB,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,GACzB,IAAVhB,GAAyB,IAAVA,GACxBL,EAAYmB,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,GAE9CnB,GAAW,IAEPH,IAAaM,IACE,IAAbN,GAA+B,IAAbA,EACpBC,EAAYmB,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,GACtB,IAAbtB,GAA+B,IAAbA,GAC3BC,EAAYmB,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,IA0D7BC,CAAYlB,EAAWC,GAAOA,QAH/C,SAKGN,IAAaK,EAAWC,GAAOA,MAC9B,cAAC,IAAD,CAAiBkB,KAAMC,IAAeT,MAAO,CAACU,SAAU,UACtD,YAKZ,OACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACf,EAAA,EAAD,CAAKC,GAAG,IAAR,SACE,oBAAIC,UAAU,cAAd,wBAEF,cAACF,EAAA,EAAD,CAAKC,GAAG,IAAIC,UAAU,qCAAtB,SACE,cAACc,EAAA,EAAD,CAAQtB,MAAM,QAAQY,QApEV,WAClBlB,EAAY,MACZE,GAAW,IAkEL,SAA4C,2CAE9C,cAACU,EAAA,EAAD,CAAKC,GAAG,IAAR,SACE,oBAAIC,UAAU,cAAd,wBAEDP,EACD,oBAAIO,UAAU,mBAAd,SAAkCjB,UC3F3BgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.42e1d037.chunk.js","sourcesContent":["import \"./App.css\";\nimport { Container, Row, Col, Button } from \"reactstrap\";\nimport { useState } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTableTennis } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction App() {\n  const [position, setPosition] = useState(null);\n  const [isServe, setIsServe] = useState(true);\n\n  const handleClick = (index) => {\n    if (isServe) {\n      if (index === 1 || index === 2) {\n        setPosition(Math.floor(Math.random() * 4) + 5);\n      } else if (index === 7 || index === 8) {\n        setPosition(Math.floor(Math.random() * 4) + 1);\n      }\n      setIsServe(false);\n    } else {\n      if (position === index) {\n        if (position === 3 || position === 4) {\n          setPosition(Math.floor(Math.random() * 4) + 5);\n        } else if (position === 5 || position === 6) {\n          setPosition(Math.floor(Math.random() * 4) + 1);\n        }\n      }\n    }\n  };\n\n  const handleReset = () => {\n    setPosition(null);\n    setIsServe(true);\n  }\n\n  let message;\n  if ([1, 2, 7, 8].includes(position)) {\n    message = 'You lose!!!';\n  }\n\n  const boxesInfos = [\n    {\n      index: 1,\n      color: \"white\",\n    },\n    {\n      index: 3,\n      color: \"green\",\n    },\n    {\n      index: 5,\n      color: \"green\",\n    },\n    {\n      index: 7,\n      color: \"white\",\n    },\n    {\n      index: 2,\n      color: \"white\",\n    },\n    {\n      index: 4,\n      color: \"green\",\n    },\n    {\n      index: 6,\n      color: \"green\",\n    },\n    {\n      index: 8,\n      color: \"white\",\n    },\n  ];\n\n  let boxes = Array(8)\n    .fill(0)\n    .map((elem, index) => (\n      <Col xs=\"3\" className=\"p-1\">\n        <div\n          style={{ height: \"10rem\", backgroundColor: boxesInfos[index].color }}\n          className=\"d-flex justify-content-center align-items-center\"\n          onClick={() => handleClick(boxesInfos[index].index)}\n        >\n          {position === boxesInfos[index].index ? (\n            <FontAwesomeIcon icon={faTableTennis} style={{fontSize: '3rem'}} />\n          ) : null}\n        </div>\n      </Col>\n    ));\n\n  return (\n    <Container>\n      <Row>\n        <Col xs='3'>\n          <h2 className=\"text-center\">Player 1</h2>\n        </Col>\n        <Col xs='6' className=\"d-flex justify-content-center mb-4\">\n          <Button color=\"light\" onClick={handleReset}><h2>Reset</h2></Button>\n        </Col>\n        <Col xs='3'>\n          <h2 className=\"text-center\">Player 2</h2>\n        </Col>\n        {boxes}\n        <h2 className=\"text-center mt-4\">{message}</h2>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}